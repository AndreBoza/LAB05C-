// <auto-generated />
using System;
using LAB05_AndreBoza.Datos;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LAB05_AndreBoza.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("LAB05_AndreBoza.Models.Asistencia", b =>
                {
                    b.Property<int>("IdAsistencia")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdAsistencia"));

                    b.Property<string>("Estado")
                        .HasColumnType("longtext");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdCursoNavigationIdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstudiante")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstudianteNavigationIdEstudiante")
                        .HasColumnType("int");

                    b.HasKey("IdAsistencia");

                    b.HasIndex("IdCursoNavigationIdCurso");

                    b.HasIndex("IdEstudianteNavigationIdEstudiante");

                    b.ToTable("Asistencias");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .HasColumnType("longtext");

                    b.HasKey("IdCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Curso", b =>
                {
                    b.Property<int>("IdCurso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCurso"));

                    b.Property<int>("Creditos")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdCurso");

                    b.ToTable("Cursos");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Estudiante", b =>
                {
                    b.Property<int>("IdEstudiante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEstudiante"));

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<int>("Edad")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefono")
                        .HasColumnType("longtext");

                    b.HasKey("IdEstudiante");

                    b.ToTable("Estudiantes");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Evaluacione", b =>
                {
                    b.Property<int>("IdEvaluacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdEvaluacion"));

                    b.Property<decimal?>("Calificacion")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly?>("Fecha")
                        .HasColumnType("date");

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdCursoNavigationIdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstudiante")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstudianteNavigationIdEstudiante")
                        .HasColumnType("int");

                    b.HasKey("IdEvaluacion");

                    b.HasIndex("IdCursoNavigationIdCurso");

                    b.HasIndex("IdEstudianteNavigationIdEstudiante");

                    b.ToTable("Evaluaciones");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Materia", b =>
                {
                    b.Property<int>("IdMateria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMateria"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdCursoNavigationIdCurso")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdMateria");

                    b.HasIndex("IdCursoNavigationIdCurso");

                    b.ToTable("Materias");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Matricula", b =>
                {
                    b.Property<int>("IdMatricula")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdMatricula"));

                    b.Property<int?>("IdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdCursoNavigationIdCurso")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstudiante")
                        .HasColumnType("int");

                    b.Property<int?>("IdEstudianteNavigationIdEstudiante")
                        .HasColumnType("int");

                    b.Property<string>("Semestre")
                        .HasColumnType("longtext");

                    b.HasKey("IdMatricula");

                    b.HasIndex("IdCursoNavigationIdCurso");

                    b.HasIndex("IdEstudianteNavigationIdEstudiante");

                    b.ToTable("Matriculas");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Profesore", b =>
                {
                    b.Property<int>("IdProfesor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProfesor"));

                    b.Property<string>("Correo")
                        .HasColumnType("longtext");

                    b.Property<string>("Especialidad")
                        .HasColumnType("longtext");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdProfesor");

                    b.ToTable("Profesores");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Asistencia", b =>
                {
                    b.HasOne("LAB05_AndreBoza.Models.Curso", "IdCursoNavigation")
                        .WithMany("Asistencia")
                        .HasForeignKey("IdCursoNavigationIdCurso");

                    b.HasOne("LAB05_AndreBoza.Models.Estudiante", "IdEstudianteNavigation")
                        .WithMany("Asistencia")
                        .HasForeignKey("IdEstudianteNavigationIdEstudiante");

                    b.Navigation("IdCursoNavigation");

                    b.Navigation("IdEstudianteNavigation");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Evaluacione", b =>
                {
                    b.HasOne("LAB05_AndreBoza.Models.Curso", "IdCursoNavigation")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("IdCursoNavigationIdCurso");

                    b.HasOne("LAB05_AndreBoza.Models.Estudiante", "IdEstudianteNavigation")
                        .WithMany("Evaluaciones")
                        .HasForeignKey("IdEstudianteNavigationIdEstudiante");

                    b.Navigation("IdCursoNavigation");

                    b.Navigation("IdEstudianteNavigation");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Materia", b =>
                {
                    b.HasOne("LAB05_AndreBoza.Models.Curso", "IdCursoNavigation")
                        .WithMany("Materia")
                        .HasForeignKey("IdCursoNavigationIdCurso");

                    b.Navigation("IdCursoNavigation");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Matricula", b =>
                {
                    b.HasOne("LAB05_AndreBoza.Models.Curso", "IdCursoNavigation")
                        .WithMany("Matriculas")
                        .HasForeignKey("IdCursoNavigationIdCurso");

                    b.HasOne("LAB05_AndreBoza.Models.Estudiante", "IdEstudianteNavigation")
                        .WithMany("Matriculas")
                        .HasForeignKey("IdEstudianteNavigationIdEstudiante");

                    b.Navigation("IdCursoNavigation");

                    b.Navigation("IdEstudianteNavigation");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Curso", b =>
                {
                    b.Navigation("Asistencia");

                    b.Navigation("Evaluaciones");

                    b.Navigation("Materia");

                    b.Navigation("Matriculas");
                });

            modelBuilder.Entity("LAB05_AndreBoza.Models.Estudiante", b =>
                {
                    b.Navigation("Asistencia");

                    b.Navigation("Evaluaciones");

                    b.Navigation("Matriculas");
                });
#pragma warning restore 612, 618
        }
    }
}
